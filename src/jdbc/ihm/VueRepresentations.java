/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jdbc.ihm;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.text.SimpleDateFormat;
import java.util.LinkedHashMap;
import javax.swing.table.DefaultTableModel;
import jdbc.controler.ControlerReservation;
import jdbc.metier.Representation;
import jdbc.observer.Observer;
import jdbc.observer.WhatChanged;

/**
 *
 * @author cflagollet
 */
public class VueRepresentations extends javax.swing.JFrame implements Observer {
    ControlerReservation controler;
    /**
     * Creates new form vueRepresentations
     */
    public VueRepresentations(ControlerReservation controler) {
        initComponents();
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.pack();
        setLocation(dim.width/2 - getWidth()/2, dim.height/2 - getHeight()/2-300);
        
        this.controler = controler;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblRep = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Liste des représentations");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTblRep.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTblRep.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Date", "Représentation", "Nb Réservations", "NbPlaces"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTblRep.setRowMargin(2);
        jTblRep.setRowSelectionAllowed(false);
        jScrollPane1.setViewportView(jTblRep);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 23, 629, 250));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTblRep;
    // End of variables declaration//GEN-END:variables

    
    /** mise à jour de la vue
     * Envoyé par le model
     * Utilisation de la classe WhatChanged pour savoir quelles sont les données à mettre à jour
     * @param wc 
     * MSG_INIT :   Message Envoyé Après chaque enregistrement, et au début de l'appli
     *              O1 Integer                                  Nombre de personnes
     *              O2 LinkedHashMap<Integer,Adherent>          HashMap des adhérents
     *              O3 LinkedHashMap<Integer,Representation>    HashMap des représentations
     *              04 Double                                   Prix total à payer
     * Seul le paramètre 03 est utilisé
     */
    @Override
    public void update(WhatChanged wc) {
        
        if (wc.getMess()==WhatChanged.type_message.MSG_INIT) {
            String[] cols = {"Date","Representation","Nb réservations","NbPlaces"}; 
            DefaultTableModel listData = new DefaultTableModel(cols,0); 
            LinkedHashMap<Integer,Representation> hashR =(LinkedHashMap<Integer,Representation>) wc.getO3();    
           // SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            
                for (Representation r : hashR.values()) {
                        String[] ts = { new SimpleDateFormat("dd/MM/yyyy").format(r.getDateRepresentation()),
                                    r.getNomSpectacle(),
                                    Integer.toString(r.getNbPersRes()),
                                    Integer.toString(r.getNbPersMax())};        
                    listData.addRow(ts);
                }
            jTblRep.setModel(listData);
            initTailleCols();
        }
    }
    
    private void initTailleCols() 
    {
        int[] tailleCol = {27,113,30,81};
        for (int i=0;i<tailleCol.length;i++)
            jTblRep.getColumnModel().getColumn(i).setPreferredWidth(tailleCol[i]);       
    }
    
}
